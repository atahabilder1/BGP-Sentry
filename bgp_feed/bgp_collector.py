# --------------------------------------------------------------
# File: bgp_collector.py
# Purpose: Load BGP announcements from shared JSONL file
# Called By: node.py during block proposal
# Writes To: Nothing (reads from bgp_stream.jsonl)
# Dependencies:
#   - shared_data/bgp_stream.jsonl (append-only file from bgp_simulator)
# --------------------------------------------------------------

import os
import json
from blockchain.block import BGPAnnouncement

# Shared buffer file generated by bgp_simulator.py
STREAM_FILE = "shared_data/bgp_stream.jsonl"

# --------------------------------------------------------------
# Function: collect_bgp_announcements
# Reads up to `max_announcements` lines from buffer file.
# Converts each to a BGPAnnouncement object and removes processed lines.
# --------------------------------------------------------------
def collect_bgp_announcements(max_announcements=5):
    announcements = []
    leftover_lines = []

    try:
        with open(STREAM_FILE, "r") as f:
            lines = f.readlines()

        for line in lines:
            if len(announcements) >= max_announcements:
                leftover_lines.append(line)
                continue

            try:
                data = json.loads(line.strip())

                ann = BGPAnnouncement(
                    asn=data["asn"],
                    prefix=data["prefix"],
                    as_path=data["as_path"],
                    next_hop=data["next_hop"],
                    timestamp=data["timestamp"],
                    ann_type=data.get("type", "announce"),  # default = announce
                    wallet_address=data.get("wallet_address", "")
                )
                announcements.append(ann)

            except (json.JSONDecodeError, KeyError):
                print(f"⚠️ Invalid line skipped: {line.strip()}")

        with open(STREAM_FILE, "w") as f:
            f.writelines(leftover_lines)

    except FileNotFoundError:
        print(f"❌ File not found: {STREAM_FILE}. Is simulator running?")

    return announcements
